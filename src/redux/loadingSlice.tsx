// src/redux/features/loading/loadingSlice.ts
// Redux slice for managing a global loading state

import { createSlice } from '@reduxjs/toolkit';

// Define the shape of the loading state
interface LoadingState {
  isLoading: boolean;
}

// Set the initial state
const initialState: LoadingState = {
  isLoading: false,
};

// Create the loading slice
const loadingSlice = createSlice({
  name: 'loading', // Slice name
  initialState, // Initial state defined above
  reducers: {
    // Reducer to set isLoading to true
    startLoading: (state) => {
      state.isLoading = true;
    },
    // Reducer to set isLoading to false
    stopLoading: (state) => {
      state.isLoading = false;
    },
    // You could add more specific loading states if needed,
    // e.g., setLoadingMessage: (state, action: PayloadAction<string>) => { state.message = action.payload; }
  },
});

// Export the actions generated by the slice
export const { startLoading, stopLoading } = loadingSlice.actions;

// Export the reducer
export default loadingSlice.reducer;
